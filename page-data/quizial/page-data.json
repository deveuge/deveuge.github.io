{"componentChunkName":"component---src-templates-blog-post-js","path":"/quizial/","result":{"data":{"site":{"siteMetadata":{"title":"Deveuge"}},"markdownRemark":{"id":"2a308f59-a0c9-5a2c-b9cb-7a430023a7a4","excerpt":"Quizial Spring CRUD Application - Create online quizzes, share them with your friends and discover your identity through engaging personality quizzes from otherâ€¦","html":"<h1 id=\"quizial\"><strong>Quizial</strong></h1>\n<p><em>Spring CRUD Application - Create online quizzes, share them with your friends and discover your identity through engaging personality quizzes from other users</em></p>\n<h2 id=\"features\">Features</h2>\n<ul>\n<li>CRUD application that allows you to generate online tests, share them and take quizzes created by other people to get a result based on your answers.</li>\n<li>\n<p>Initial login and registration page.</p>\n<ul>\n<li>Non-registered users can only access and take quizzes that have already been created, but cannot create new quizzes.</li>\n<li>To verify the registration, a confirmation email will be sent to the email address provided during the signup process.</li>\n<li>Password recovery functionality by sending a reset link to the email with which the account was created.</li>\n<li>Functionality to remember credentials in order to keep the session open.</li>\n</ul>\n</li>\n<li>Dashboard with the quizzes available in the application with the possibility to see the most popular, the newest or those created by friends. Customised searches can also be performed.</li>\n<li>Ability to take quizzes, with the option to reset progress, add to favourites or share on social networks.</li>\n<li>Personal user page that displays your created quizzes, those you have added to favourites and other users you have added as friends.</li>\n<li>\n<p>Ability to create or edit existing quizzes, specifying up to 4 possible outcomes and up to 10 questions per quiz, with up to 4 answers each.</p>\n<ul>\n<li>The test can have a header image, which will be uploaded to the server.</li>\n<li>Each question and answer can have an illustrative image, which can be specified by URL or picked up from a GIPHY search thanks to an internal integration.\n<a href=\"/197c99fbe22d9b117528999460004930/preview-giphy.gif\" target=\"blank-\"><img src=\"/197c99fbe22d9b117528999460004930/preview-giphy.gif\" alt=\"GIPHY Integration\" style=\"width:100%;\"></a></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"technical-aspects\">Technical aspects</h2>\n<h3 id=\"frontend\">Frontend</h3>\n<ul>\n<li>Use of <a href=\"https://getuikit.com/\">UIKit</a> to implement a front-end library other than the classic Bootstrap.</li>\n<li>Use of <a href=\"https://www.ocpsoft.org/prettytime/\">PrettyTime</a> as an OpenSource time formatting library.</li>\n<li>Use of <a href=\"https://www.thymeleaf.org/index.html\">Thymeleaf</a> as a templating language as it has excellent integration with Spring.</li>\n</ul>\n<h3 id=\"backend\">Backend</h3>\n<ul>\n<li>Use of JPA Criteria Queries for database queries, extending CrudRepository and creating own implementations for custom methods with Spring Data JPA.</li>\n<li>JPA MetaModel Generation with Hibernate.</li>\n<li>DTO to Entity Mapping via MapStruct.</li>\n<li>Automatic column audition: CreatedAt, UpdatedAt and user modifications are saved automatically.</li>\n<li>Automatic entity audition: @PrePersist, @PreUpdate, @PreRemove to control the creation, modification and deletion of entities.</li>\n<li>Customised implementation of permission verification through a custom security expression with Spring Security.</li>\n<li>Integration with GIPHY to search for GIFs from within the application through its <a href=\"https://developers.giphy.com/docs/api/endpoint/#search\">search endpoint</a>.</li>\n<li>Data mapping in the GIPHY integration via Jackson.</li>\n<li>Custom implementation to preserve transient fields for preupdate (through @Postmerge).</li>\n<li>Use of @SecondaryTable on view to calculate total sum of favourites.</li>\n<li>Exclusion of tables from hibernate autogeneration (used for the views).</li>\n<li>Application logging using Spring AOP (Aspect-Oriented Programming).</li>\n<li>Use of Lombok to prevent repetitive code generation.</li>\n</ul>\n<h2 id=\"future-improvements\">Future improvements</h2>\n<p>The project can be improved on several points:</p>\n<ul>\n<li>Add complex search filters.</li>\n<li>Allow editing of user data in the profile.</li>\n<li>Add an administration console and the ability to report quizzes and users.</li>\n</ul>","tableOfContents":"<ul>\n<li>\n<p><a href=\"/quizial/#quizial\"><strong>Quizial</strong></a></p>\n<ul>\n<li><a href=\"/quizial/#features\">Features</a></li>\n<li><a href=\"/quizial/#technical-aspects\">Technical aspects</a></li>\n<li><a href=\"/quizial/#future-improvements\">Future improvements</a></li>\n</ul>\n</li>\n</ul>","frontmatter":{"title":"Quizial","description":"Spring CRUD Application. Create online quizzes, share them with your friends and discover your identity through engaging personality quizzes from other users.","images":["img/projects/quizial-00.png","img/projects/quizial-01.png","img/projects/quizial-02.png","img/projects/quizial-03.png","img/projects/quizial-04.png"],"codePreview":"https://github.com/deveuge/quizial","livePreview":null,"tags":["Java","Spring","Thymeleaf"]}}},"pageContext":{"slug":"/quizial/","previous":{"fields":{"slug":"/kingsmarch/"},"frontmatter":{"title":"Kingsmarch"}},"next":null}},"staticQueryHashes":["2841359383"]}